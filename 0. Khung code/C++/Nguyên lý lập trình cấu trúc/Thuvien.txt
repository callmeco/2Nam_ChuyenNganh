#define MAX 100

typedef int DaySo[MAX];

Nhập và Xuất mảng
void NhapMang(DaySo a, int n)
{
	int i;
	int max = 10, min = -10;
	srand((unsigned)time(NULL));
	for (i = 0; i < n; i++)
	{
		a[i] = rand() % (max - min) + min;
	}
}

Nhập tự động
void NhapTuDong(int a[MAX], int &n)
{
    int i;
    srand((unsigned)time(NULL));
    cout << "\nNhap vao so luong phan tu cua mang : ";
    cin >> n;

    for (i = 0; i < n; i++)
        a[i] = -10 + rand() % 20 + 1;
}

Xuất mảng
void XuatMang(int a[MAX], int n)
{
	for (int i = 0; i < n; i++)
		cout << a[i] << '\t';
	cout << endl;
}

Nhập từ file
void docTapTin(char *filename, int a[MAX], int &n)
{
	ifstream input(filename);
	if (!input)
	{
		cout << "\nLoi doc tap tin.";
		exit(1);
	}
	input >> n;
	for (int i = 0; i < n; i++)
		input >> a[i];
}

Hàm hoán vị
void HoanVi(int &a, int &b)
{
	int tam = a;
	a = b;
	b = tam;
}

Hoán vị chuỗi
void HoanViChuoi(int a[MAX], int i, int j, int m)
{
	for (int k = 0; k < m; k++)
		HoanVi(a[i + k], a[j + k]);
}

Chuyển chuỗi
void ChuyenChuoi(int a[MAX], int n, int m)
{
	int i = m;
	int j = n - m;

	while (i != j)
	{
		if (i > j)
		{
			HoanViChuoi(a, m - i, m, j);
			i = i - j;
		}
		else
		{
			j = j - i;
			HoanViChuoi(a, m - i, m + j, i);
		}
	}

	HoanViChuoi(a, m-i, m, i);
}

Hàm sắp xếp
void SapXep(DaySo a, int n)
{
	int i, mc;
	for (int i = 0; i < n - 1; i++)
	{
		for (int j = i + 1; j < n; j++)
		{
			mc = (a[i] > 0 && a[j] > 0 && a[i] > a[j]);
			if (mc)
			{
				HoanVi(a[i], a[j]);
			}
		}
	}
}

Chèn phần tử
void ChenPhanTu(DaySo a, int &n, int x, int vt)
{
	int i;
	for (i = n; i > vt; i--)
		a[i] = a[i - 1];
	a[vt] = x;
	n = n + 1; // Tang kich thuoc cua mang len 1 phan tu
}

Xóa phần tử
void XoaPhanTu(DaySo a, int &n, int vt)
{
	int i;
	for (i = vt; i < n - 1; i++)
		a[i] = a[i + 1];
	n = n - 1; // Giam kich thuoc cua mang di 1 phan tu
}

Đếm số
int DemSo(int n)
{
	int dem = 0;
	while (n > 0)
	{
		n /= 10;
		dem++;
	}
	return dem;
}

Tích các chữ số
int TichCacChuSo(unsigned int n)
{
	int tich = 1;
	while (n > 0)
	{
		int tam = n % 10;
		tich *= tam;
		n /= 10;
	}

	return tich;
}

Tính tổng
int TinhTong(DaySo a, int n)
{
	int i, sum = 0;
	for (i = 0; i < n; i++)
		sum += a[i];
	return sum;
}

Tính Min
int TinhMin(DaySo a, int n)
{
	int i, min = a[0];
	for (i = 1; i < n; i++)
		if (a[i] < min)
			min = a[i];
	return min;
}

Tính Max
int TinhMax(DaySo a, int n)
{
	int i, max = a[0];
	for (i = 1; i < n; i++)
		if (a[i] > max)
			max = a[i];
	return max;
}

Chuyển thành chữ thường
void Chuyen_KT_thuong(String str)
{
	int len, i;
	len = strlen(str);
	for (i = 0; i < len; i++)
		if (65 <= str[i] && str[i] <= 90)
			// chuyen thanh ky tu thuong
			str[i] = str[i] + 32;
}

Chuyển thành chữ hoa
void Chuyen_KT_HOA(String str)
{
	int len, i;
	len = strlen(str);
	for (i = 0; i < len; i++)
		if (97 <= str[i] && str[i] <= 122)
			// chuyen thanh ky tu thuong
			str[i] = str[i] - 32;
}

Đảo ngược chuỗi
void DaoNguocChuoi(String a)
{
	int len, i, mid;
	len = strlen(a);

	mid = len / 2;
	for (i = 0; i < mid; i++)
		HoanVi(a[i], a[len - 1 - i]);
}

Đếm số lần xuất hiện x
int DemSoLanXuatHien_X(String str, char x)
{
	int dem = 0, len;
	len = strlen(str);
	for (int i = 0; i < len; i++)
		if (x == str[i])
			dem++;
	return dem;
}

Vị trí đầu tiên của x
int ViTri_DauTien_X(String str, char x)
{
	int vt, len, i;
	len = strlen(str);
	vt = -1;
	for (i = 0; i < len; i++)
		if (str[i] == x)
		{
			vt = i;
			break;
		}
	return vt;
}